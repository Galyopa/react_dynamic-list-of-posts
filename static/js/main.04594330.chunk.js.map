{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","onOpenPost","className","map","post","userId","title","type","onClick","id","request","url","options","a","fetch","response","json","getPostComments","postId","removePostComment","commentId","method","addPostComment","newComment","headers","body","JSON","stringify","NewCommentForm","onSubmit","useState","name","setName","email","setEmail","setBody","event","placeholder","value","onChange","target","PostDetails","setPost","comments","setComments","isShowComments","setShowComments","useEffect","getPostById","then","postFromServer","commentsFromServer","handleDEleteComment","handleOnSubmit","useCallback","preventDefault","length","comment","App","setPosts","selectedUser","setSelectedUser","setSelectedPostId","postsFromServer","handleOpeningPost","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04594330.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[];\n  selectedPostId: number;\n  onOpenPost(postId: number): void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  onOpenPost,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>{`[User #${post.userId}]: `}</b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => onOpenPost(post.id)}\n          >\n            {\n              selectedPostId === post.id\n                ? 'Close'\n                : 'Open'\n            }\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nconst request = async (url: string, options?: Options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  return response.json();\n};\n\nexport const getUserPosts = (userId: number) => {\n  return request(`/posts?userId=${userId}`);\n};\n\nexport const getPosts = () => {\n  return request('/posts');\n};\n\nexport const getPostById = (postId: number) => {\n  return request(`/posts/${postId}`);\n};\n\nexport const getPostComments = (postId: number) => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const removePostComment = (commentId: number) => {\n  return request(`/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addPostComment = (newComment: NewComment) => {\n  return request('/comments', {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify(newComment),\n  });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number;\n  onSubmit(\n    event: React.FormEvent<HTMLFormElement>,\n    newComment: NewComment\n  ): void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    onSubmit(\n      event,\n      {\n        name,\n        email,\n        body,\n        postId,\n      },\n    );\n\n    setBody('');\n    setEmail('');\n    setName('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleOnSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  addPostComment,\n  getPostById,\n  getPostComments,\n  removePostComment,\n} from '../../api/api';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isShowComments, setShowComments] = useState(true);\n\n  useEffect(() => {\n    if (!postId) {\n      setPost(null);\n    } else {\n      getPostById(postId).then(postFromServer => setPost(postFromServer));\n      getPostComments(postId)\n        .then(commentsFromServer => setComments(commentsFromServer));\n    }\n  }, [postId]);\n\n  const handleDEleteComment = async (commentId: number) => {\n    const deletedCommentId = await removePostComment(commentId);\n\n    if (deletedCommentId) {\n      const commentsFromServer = await getPostComments(postId);\n\n      setComments(commentsFromServer);\n    }\n  };\n\n  const handleOnSubmit = useCallback(async (\n    event: React.FormEvent<HTMLFormElement>,\n    newComment: NewComment,\n  ) => {\n    event.preventDefault();\n    const addedComment = await addPostComment(newComment);\n\n    if (addedComment) {\n      const commentsFromServer = await getPostComments(postId);\n\n      setComments(commentsFromServer);\n    }\n  }, [comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      {\n        post\n          ? (\n            <>\n              <h2>Post details:</h2>\n\n              <section className=\"PostDetails__post\">\n                <p>{post.title}</p>\n              </section>\n\n              <section className=\"PostDetails__comments\">\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => setShowComments(!isShowComments)}\n                >\n                  { isShowComments\n                    ? (`Hide ${comments.length}`)\n                    : ('Show')}\n                  {' '}\n                  comments\n                </button>\n                {\n                  isShowComments && (\n                    <ul className=\"PostDetails__list\">\n                      {comments.map(comment => (\n                        <li\n                          className=\"PostDetails__list-item\"\n                          key={comment.id}\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"PostDetails__remove-button button\"\n                            onClick={() => handleDEleteComment(comment.id)}\n                          >\n                            X\n                          </button>\n                          <p>{comment.body}</p>\n                        </li>\n                      ))}\n                    </ul>\n                  )\n                }\n              </section>\n\n              <section>\n                <div className=\"PostDetails__form-wrapper\">\n                  <NewCommentForm\n                    postId={postId}\n                    onSubmit={handleOnSubmit}\n                  />\n                </div>\n              </section>\n            </>\n          )\n          : ('Choose the post')\n      }\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts, getUserPosts } from './api/api';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    if (!selectedUser) {\n      getPosts().then(postsFromServer => setPosts(postsFromServer));\n    } else {\n      getUserPosts(selectedUser)\n        .then(postsFromServer => setPosts(postsFromServer));\n    }\n  }, [selectedUser]);\n\n  const handleOpeningPost = useCallback(\n    (postId: number) => {\n      setSelectedPostId(\n        postId === selectedPostId\n          ? 0\n          : postId,\n      );\n    }, [selectedPostId],\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => setSelectedUser(Number(event.target.value))}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            onOpenPost={handleOpeningPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails postId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}